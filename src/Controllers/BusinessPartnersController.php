<?php

declare(strict_types=1);

/*
 * ServiceLayerUOCLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace ServiceLayerUOCLib\Controllers;

use Core\Request\Parameters\BodyParam;
use Core\Request\Parameters\QueryParam;
use CoreInterfaces\Core\Request\RequestMethod;
use ServiceLayerUOCLib\Exceptions\ApiException;
use ServiceLayerUOCLib\Models\ActualizarRequest;
use ServiceLayerUOCLib\Models\CrearNuevoRequest;
use ServiceLayerUOCLib\Server;

class BusinessPartnersController extends BaseController
{
    /**
     * @return void Response from the API call
     *
     * @throws ApiException Thrown if API call fails
     */
    public function listarTodos(): void
    {
        $_reqBuilder = $this->requestBuilder(RequestMethod::GET, '/BusinessPartners')->server(Server::SERVER_3);

        $this->execute($_reqBuilder);
    }

    /**
     * @param string $select
     *
     * @return void Response from the API call
     *
     * @throws ApiException Thrown if API call fails
     */
    public function verBusinessPartner(string $select): void
    {
        $_reqBuilder = $this->requestBuilder(RequestMethod::GET, '/BusinessPartners(\'c001\')')
            ->server(Server::SERVER_3)
            ->parameters(QueryParam::init('$select', $select));

        $this->execute($_reqBuilder);
    }

    /**
     * @param CrearNuevoRequest $body
     *
     * @return void Response from the API call
     *
     * @throws ApiException Thrown if API call fails
     */
    public function crearNuevo(CrearNuevoRequest $body): void
    {
        $_reqBuilder = $this->requestBuilder(RequestMethod::POST, '/BusinessPartners')
            ->server(Server::SERVER_3)
            ->parameters(BodyParam::init($body));

        $this->execute($_reqBuilder);
    }

    /**
     * @param ActualizarRequest $body
     *
     * @return void Response from the API call
     *
     * @throws ApiException Thrown if API call fails
     */
    public function actualizar(ActualizarRequest $body): void
    {
        $_reqBuilder = $this->requestBuilder(RequestMethod::PATCH, '/BusinessPartners(\'c001\')')
            ->server(Server::SERVER_3)
            ->parameters(BodyParam::init($body));

        $this->execute($_reqBuilder);
    }

    /**
     * @return void Response from the API call
     *
     * @throws ApiException Thrown if API call fails
     */
    public function newRequest(): void
    {
        $_reqBuilder = $this->requestBuilder(RequestMethod::DELETE, '/BusinessPartners(\'c001\')')
            ->server(Server::SERVER_3);

        $this->execute($_reqBuilder);
    }
}
