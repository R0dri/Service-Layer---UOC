<?php

declare(strict_types=1);

/*
 * ServiceLayerUOCLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace ServiceLayerUOCLib\Tests\Controllers;

use Core\TestCase\TestParam;
use ServiceLayerUOCLib\Controllers\QuotationsController;
use ServiceLayerUOCLib\Exceptions;
use ServiceLayerUOCLib\Models;

class QuotationsControllerTest extends BaseTestController
{
    /**
     * @var QuotationsController QuotationsController instance
     */
    protected static $controller;

    /**
     * Setup test class
     */
    public static function setUpBeforeClass(): void
    {
        self::$controller = parent::getClient()->getQuotationsController();
    }

    public function testListarTodos()
    {
        // Perform API call
        try {
            self::$controller->listarTodos();
        } catch (Exceptions\ApiException $e) {
        }

        // Assert result with expected response
        $this->newTestCase(null)->expectStatus(200)->assert();
    }

    public function testVerCotizaciN()
    {
        // Perform API call
        try {
            self::$controller->verCotizaciN();
        } catch (Exceptions\ApiException $e) {
        }

        // Assert result with expected response
        $this->newTestCase(null)->expectStatus(200)->assert();
    }

    public function testActualizar()
    {
        // Parameters for the API call
        $body = TestParam::object(
            "{\r\n  \"Comments\": \"new comments - modified by Service Layer\"\r\n}",
            Models\ActualizarRequest1::class
        );

        // Perform API call
        try {
            self::$controller->actualizar($body);
        } catch (Exceptions\ApiException $e) {
        }

        // Assert result with expected response
        $this->newTestCase(null)->expectStatus(200)->assert();
    }

    public function testCerrar()
    {
        // Perform API call
        try {
            self::$controller->cerrar();
        } catch (Exceptions\ApiException $e) {
        }

        // Assert result with expected response
        $this->newTestCase(null)->expectStatus(200)->assert();
    }

    public function testCancelar()
    {
        // Perform API call
        try {
            self::$controller->cancelar();
        } catch (Exceptions\ApiException $e) {
        }

        // Assert result with expected response
        $this->newTestCase(null)->expectStatus(200)->assert();
    }

    public function testReabrir()
    {
        // Perform API call
        try {
            self::$controller->reabrir();
        } catch (Exceptions\ApiException $e) {
        }

        // Assert result with expected response
        $this->newTestCase(null)->expectStatus(200)->assert();
    }

    public function testGenerarDocumentoDeCancelaciN()
    {
        // Perform API call
        try {
            self::$controller->generarDocumentoDeCancelaciN();
        } catch (Exceptions\ApiException $e) {
        }

        // Assert result with expected response
        $this->newTestCase(null)->expectStatus(200)->assert();
    }
}
